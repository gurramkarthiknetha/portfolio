[{"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/index.js":"1","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/App.js":"2","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/reportWebVitals.js":"3","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/NavBar.js":"4","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Projects.js":"5","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Footer.js":"6","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Contact.js":"7","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Skills.js":"8","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Banner.js":"9","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/ProjectCard.js":"10","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/MailchimpForm.js":"11","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Newsletter.js":"12"},{"size":535,"mtime":1739911571860,"results":"13","hashOfConfig":"14"},{"size":579,"mtime":1739918860702,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1739911571860,"results":"16","hashOfConfig":"14"},{"size":2799,"mtime":1740088815824,"results":"17","hashOfConfig":"14"},{"size":9279,"mtime":1740088915870,"results":"18","hashOfConfig":"14"},{"size":1227,"mtime":1740088955806,"results":"19","hashOfConfig":"14"},{"size":3717,"mtime":1739911571859,"results":"20","hashOfConfig":"14"},{"size":2748,"mtime":1739912986907,"results":"21","hashOfConfig":"14"},{"size":3326,"mtime":1739937497863,"results":"22","hashOfConfig":"14"},{"size":564,"mtime":1739917712207,"results":"23","hashOfConfig":"14"},{"size":591,"mtime":1739911571859,"results":"24","hashOfConfig":"14"},{"size":1365,"mtime":1740089021926,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1x6a9vu",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/index.js",[],[],[],"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/App.js",["68"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./components/NavBar\";\nimport { Banner } from \"./components/Banner\";\nimport { Skills } from \"./components/Skills\";\nimport { Projects } from \"./components/Projects\";\nimport { Contact } from \"./components/Contact\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Skills />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/reportWebVitals.js",[],[],"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/NavBar.js",[],[],"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Projects.js",[],[],"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Footer.js",["69","70","71"],[],"import { Container, Row, Col } from \"react-bootstrap\";\nimport { MailchimpForm } from \"./MailchimpForm\";\nimport logo from \"../assets/img/logo.jpg\";\nimport navIcon1 from \"../assets/img/nav-icon1.svg\";\nimport navIcon2 from \"../assets/img/nav-icon2.svg\";\nimport navIcon3 from \"../assets/img/nav-icon3.svg\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <MailchimpForm />\n          <Col size={12} sm={6}>\n            <img\n              src={logo}\n              style={{\n                width: '100px',\n                height: '100px',\n                borderRadius: '50%',\n                objectFit: 'cover' \n              }}\n              alt=\"Logo\"\n            />\n\n          </Col>\n          <Col size={12} sm={6} className=\"text-center text-sm-end\">\n            <div className=\"social-icon\">\n              <a href=\"#\"><img src={navIcon1} alt=\"Icon\" /></a>\n              <a href=\"#\"><img src={navIcon2} alt=\"Icon\" /></a>\n              <a href=\"#\"><img src={navIcon3} alt=\"Icon\" /></a>\n            </div>\n            <p>Copyright 2027. All Rights Reserved</p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Contact.js",["72"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport contactImg from \"../assets/img/contact-img.svg\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Contact = () => {\n  const formInitialDetails = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    message: ''\n  }\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\n  const [buttonText, setButtonText] = useState('Send');\n  const [status, setStatus] = useState({});\n\n  const onFormUpdate = (category, value) => {\n      setFormDetails({\n        ...formDetails,\n        [category]: value\n      })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(formDetails),\n    });\n    setButtonText(\"Send\");\n    let result = await response.json();\n    setFormDetails(formInitialDetails);\n    if (result.code == 200) {\n      setStatus({ succes: true, message: 'Message sent successfully'});\n    } else {\n      setStatus({ succes: false, message: 'Something went wrong, please try again later.'});\n    }\n  };\n\n  return (\n    <section className=\"contact\" id=\"connect\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\n              }\n            </TrackVisibility>\n          </Col>\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <h2>Get In Touch</h2>\n                <form onSubmit={handleSubmit}>\n                  <Row>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.lasttName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\n                    </Col>\n                    <Col size={12} className=\"px-1\">\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\n                      <button type=\"submit\"><span>{buttonText}</span></button>\n                    </Col>\n                    {\n                      status.message &&\n                      <Col>\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\n                      </Col>\n                    }\n                  </Row>\n                </form>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Skills.js",["73","74","75","76","77","78","79"],[],"import meter1 from \"../assets/img/meter1.svg\";\nimport meter2 from \"../assets/img/meter2.svg\";\nimport meter3 from \"../assets/img/meter3.svg\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport arrow1 from \"../assets/img/arrow1.svg\";\nimport arrow2 from \"../assets/img/arrow2.svg\";\nimport colorSharp from \"../assets/img/color-sharp.png\"\n\nexport const Skills = () => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"skill-bx wow zoomIn\">\n                        <h2>Skills</h2>\n                        <p>I'm a versatile developer skilled in web and app development, specializing in React, Next.js, and Flutter. I work with HTML, CSS, Tailwind, Bootstrap, JavaScript, TypeScript, and Dart for frontend development. On the backend, I have experience with Node.js, Python, Java, C, and C++, along with databases like MySQL, PostgreSQL, and MongoDB. I also have a strong foundation in Data Structures and Algorithms (DSA), enabling me to write optimized and efficient code</p>\n                        <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Web Development</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter2} alt=\"Image\" />\n                                <h5>App Development</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter3} alt=\"Image\" />\n                                <h5>open source contributions</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>DSA</h5>\n                            </div>\n                        </Carousel>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\n    </section>\n  )\n}\n","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Banner.js",["80","81"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/img/gurramkarthik.JPG\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const [index, setIndex] = useState(1);\n  const toRotate = [ \"Web Developer\", \"App Developer\", \"Open Sourse Contributer\" ];\n  const period = 2000;\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n\n    return () => { clearInterval(ticker) };\n  }, [text])\n\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n    setText(updatedText);\n\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  }\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n        <Col xs={12} md={6} xl={5}>\n            <TrackVisibility >\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n                  <img style={{ borderRadius: \"50%\" }} src={headerImg} alt=\"Header Img\"/>\n\n                </div>}\n            </TrackVisibility>\n          </Col>\n          \n          <Col xs={12} md={6} xl={7}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <span className=\"tagline\">Welcome to my Portfolio</span>\n                <h1>{`Hi! I'm Karthik Gurram`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"App Developer\", \"Open source Contributor\" ]'><span className=\"wrap\">{text}</span></span></h1>\n                <h2>I am a <span className=\"txt-rotate\" data-period=\"2000\" ></span>Aspiring Data Scientist | GSoC Enthusiast | B.Tech Student from VNRVJIET</h2>\n                  <p>\n                  Currently pursuing a B.Tech degree from VNR Vignana Jyothi Institute of Engineering & Technology, with a strong passion for data science and innovation. I am driven by the goal of cracking the Google Summer of Code (GSoC) and building a career as a data scientist. With a commitment to continuous learning and skill-building, I am on a path to make impactful contributions to the tech industry. Expected to graduate in 2027.</p>\n                  <button onClick={() => console.log('connect')}>Let’s Connect <ArrowRightCircle size={25} /></button>\n              </div>}\n            </TrackVisibility>\n          </Col>\n\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/ProjectCard.js",[],[],"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/MailchimpForm.js",[],[],"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/src/components/Newsletter.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":29,"column":15,"nodeType":"88","endLine":29,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":30,"column":15,"nodeType":"88","endLine":30,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":31,"column":15,"nodeType":"88","endLine":31,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":39,"column":21,"nodeType":"91","messageId":"92","endLine":39,"endColumn":23},{"ruleId":"82","severity":1,"message":"93","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":14},{"ruleId":"82","severity":1,"message":"94","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":41,"column":33,"nodeType":"88","endLine":41,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":45,"column":33,"nodeType":"88","endLine":45,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":49,"column":33,"nodeType":"88","endLine":49,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":53,"column":33,"nodeType":"88","endLine":53,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":61,"column":9,"nodeType":"88","endLine":61,"endColumn":79},{"ruleId":"82","severity":1,"message":"97","line":13,"column":10,"nodeType":"84","messageId":"85","endLine":13,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":23,"column":6,"nodeType":"100","endLine":23,"endColumn":12,"suggestions":"101"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'arrow1' is defined but never used.","'arrow2' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["102"],{"desc":"103","fix":"104"},"Update the dependencies array to be: [delta, text, tick]",{"range":"105","text":"106"},[805,811],"[delta, text, tick]"]