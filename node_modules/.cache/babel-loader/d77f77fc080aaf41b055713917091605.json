{"ast":null,"code":"import _classCallCheck from \"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { noop } from 'motion-utils';\nimport { startViewAnimation } from './start.mjs';\n/**\n * TODO:\n * - Create view transition on next tick\n * - Replace animations with Motion animations\n * - Return GroupAnimation on next tick\n */\n\nvar ViewTransitionBuilder = /*#__PURE__*/function () {\n  function ViewTransitionBuilder(update) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ViewTransitionBuilder);\n\n    this.currentTarget = \"root\";\n    this.targets = new Map();\n    this.notifyReady = noop;\n    this.readyPromise = new Promise(function (resolve) {\n      _this.notifyReady = resolve;\n    });\n    queueMicrotask(function () {\n      startViewAnimation(update, options, _this.targets).then(function (animation) {\n        return _this.notifyReady(animation);\n      });\n    });\n  }\n\n  _createClass(ViewTransitionBuilder, [{\n    key: \"get\",\n    value: function get(selector) {\n      this.currentTarget = selector;\n      return this;\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(keyframes, options) {\n      this.updateTarget(\"layout\", keyframes, options);\n      return this;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(keyframes, options) {\n      this.updateTarget(\"new\", keyframes, options);\n      return this;\n    }\n  }, {\n    key: \"old\",\n    value: function old(keyframes, options) {\n      this.updateTarget(\"old\", keyframes, options);\n      return this;\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(keyframes, options) {\n      this.updateTarget(\"enter\", keyframes, options);\n      return this;\n    }\n  }, {\n    key: \"exit\",\n    value: function exit(keyframes, options) {\n      this.updateTarget(\"exit\", keyframes, options);\n      return this;\n    }\n  }, {\n    key: \"crossfade\",\n    value: function crossfade(options) {\n      this.updateTarget(\"enter\", {\n        opacity: 1\n      }, options);\n      this.updateTarget(\"exit\", {\n        opacity: 0\n      }, options);\n      return this;\n    }\n  }, {\n    key: \"updateTarget\",\n    value: function updateTarget(target, keyframes) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var currentTarget = this.currentTarget,\n          targets = this.targets;\n\n      if (!targets.has(currentTarget)) {\n        targets.set(currentTarget, {});\n      }\n\n      var targetData = targets.get(currentTarget);\n      targetData[target] = {\n        keyframes: keyframes,\n        options: options\n      };\n    }\n  }, {\n    key: \"then\",\n    value: function then(resolve, reject) {\n      return this.readyPromise.then(resolve, reject);\n    }\n  }]);\n\n  return ViewTransitionBuilder;\n}();\n\nfunction view(update) {\n  var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new ViewTransitionBuilder(update, defaultOptions);\n}\n\nexport { ViewTransitionBuilder, view };","map":{"version":3,"names":["noop","startViewAnimation","ViewTransitionBuilder","update","options","currentTarget","targets","Map","notifyReady","readyPromise","Promise","resolve","queueMicrotask","then","animation","selector","keyframes","updateTarget","opacity","target","has","set","targetData","get","reject","view","defaultOptions"],"sources":["/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/motion-dom/dist/es/view/index.mjs"],"sourcesContent":["import { noop } from 'motion-utils';\nimport { startViewAnimation } from './start.mjs';\n\n/**\n * TODO:\n * - Create view transition on next tick\n * - Replace animations with Motion animations\n * - Return GroupAnimation on next tick\n */\nclass ViewTransitionBuilder {\n    constructor(update, options = {}) {\n        this.currentTarget = \"root\";\n        this.targets = new Map();\n        this.notifyReady = noop;\n        this.readyPromise = new Promise((resolve) => {\n            this.notifyReady = resolve;\n        });\n        queueMicrotask(() => {\n            startViewAnimation(update, options, this.targets).then((animation) => this.notifyReady(animation));\n        });\n    }\n    get(selector) {\n        this.currentTarget = selector;\n        return this;\n    }\n    layout(keyframes, options) {\n        this.updateTarget(\"layout\", keyframes, options);\n        return this;\n    }\n    new(keyframes, options) {\n        this.updateTarget(\"new\", keyframes, options);\n        return this;\n    }\n    old(keyframes, options) {\n        this.updateTarget(\"old\", keyframes, options);\n        return this;\n    }\n    enter(keyframes, options) {\n        this.updateTarget(\"enter\", keyframes, options);\n        return this;\n    }\n    exit(keyframes, options) {\n        this.updateTarget(\"exit\", keyframes, options);\n        return this;\n    }\n    crossfade(options) {\n        this.updateTarget(\"enter\", { opacity: 1 }, options);\n        this.updateTarget(\"exit\", { opacity: 0 }, options);\n        return this;\n    }\n    updateTarget(target, keyframes, options = {}) {\n        const { currentTarget, targets } = this;\n        if (!targets.has(currentTarget)) {\n            targets.set(currentTarget, {});\n        }\n        const targetData = targets.get(currentTarget);\n        targetData[target] = { keyframes, options };\n    }\n    then(resolve, reject) {\n        return this.readyPromise.then(resolve, reject);\n    }\n}\nfunction view(update, defaultOptions = {}) {\n    return new ViewTransitionBuilder(update, defaultOptions);\n}\n\nexport { ViewTransitionBuilder, view };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}