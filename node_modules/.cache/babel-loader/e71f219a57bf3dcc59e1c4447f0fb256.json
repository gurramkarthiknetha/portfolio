{"ast":null,"code":"import _classCallCheck from \"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nvar AnimationFeature = /*#__PURE__*/function (_Feature) {\n  _inherits(AnimationFeature, _Feature);\n\n  var _super = _createSuper(AnimationFeature);\n\n  /**\n   * We dynamically generate the AnimationState manager as it contains a reference\n   * to the underlying animation library. We only want to load that if we load this,\n   * so people can optionally code split it out using the `m` component.\n   */\n  function AnimationFeature(node) {\n    var _this;\n\n    _classCallCheck(this, AnimationFeature);\n\n    _this = _super.call(this, node);\n    node.animationState || (node.animationState = createAnimationState(node));\n    return _this;\n  }\n\n  _createClass(AnimationFeature, [{\n    key: \"updateAnimationControlsSubscription\",\n    value: function updateAnimationControlsSubscription() {\n      var _this$node$getProps = this.node.getProps(),\n          animate = _this$node$getProps.animate;\n\n      if (isAnimationControls(animate)) {\n        this.unmountControls = animate.subscribe(this.node);\n      }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      this.updateAnimationControlsSubscription();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this$node$getProps2 = this.node.getProps(),\n          animate = _this$node$getProps2.animate;\n\n      var _ref = this.node.prevProps || {},\n          prevAnimate = _ref.animate;\n\n      if (animate !== prevAnimate) {\n        this.updateAnimationControlsSubscription();\n      }\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      var _a;\n\n      this.node.animationState.reset();\n      (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }]);\n\n  return AnimationFeature;\n}(Feature);\n\nexport { AnimationFeature };","map":{"version":3,"names":["isAnimationControls","createAnimationState","Feature","AnimationFeature","node","animationState","getProps","animate","unmountControls","subscribe","updateAnimationControlsSubscription","prevProps","prevAnimate","_a","reset","call"],"sources":["/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs"],"sourcesContent":["import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n"],"mappings":";;;;AAAA,SAASA,mBAAT,QAAoC,oDAApC;AACA,SAASC,oBAAT,QAAqC,2CAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;;IAEMC,gB;;;;;EACF;AACJ;AACA;AACA;AACA;EACI,0BAAYC,IAAZ,EAAkB;IAAA;;IAAA;;IACd,0BAAMA,IAAN;IACAA,IAAI,CAACC,cAAL,KAAwBD,IAAI,CAACC,cAAL,GAAsBJ,oBAAoB,CAACG,IAAD,CAAlE;IAFc;EAGjB;;;;WACD,+CAAsC;MAClC,0BAAoB,KAAKA,IAAL,CAAUE,QAAV,EAApB;MAAA,IAAQC,OAAR,uBAAQA,OAAR;;MACA,IAAIP,mBAAmB,CAACO,OAAD,CAAvB,EAAkC;QAC9B,KAAKC,eAAL,GAAuBD,OAAO,CAACE,SAAR,CAAkB,KAAKL,IAAvB,CAAvB;MACH;IACJ;IACD;AACJ;AACA;;;;WACI,iBAAQ;MACJ,KAAKM,mCAAL;IACH;;;WACD,kBAAS;MACL,2BAAoB,KAAKN,IAAL,CAAUE,QAAV,EAApB;MAAA,IAAQC,OAAR,wBAAQA,OAAR;;MACA,WAAiC,KAAKH,IAAL,CAAUO,SAAV,IAAuB,EAAxD;MAAA,IAAiBC,WAAjB,QAAQL,OAAR;;MACA,IAAIA,OAAO,KAAKK,WAAhB,EAA6B;QACzB,KAAKF,mCAAL;MACH;IACJ;;;WACD,mBAAU;MACN,IAAIG,EAAJ;;MACA,KAAKT,IAAL,CAAUC,cAAV,CAAyBS,KAAzB;MACA,CAACD,EAAE,GAAG,KAAKL,eAAX,MAAgC,IAAhC,IAAwCK,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACE,IAAH,CAAQ,IAAR,CAAjE;IACH;;;;EAjC0Bb,O;;AAoC/B,SAASC,gBAAT"},"metadata":{},"sourceType":"module"}