{"ast":null,"code":"import { isPressing } from './state.mjs';\n/**\n * Filter out events that are not \"Enter\" keys.\n */\n\nfunction filterEvents(callback) {\n  return function (event) {\n    if (event.key !== \"Enter\") return;\n    callback(event);\n  };\n}\n\nfunction firePointerEvent(target, type) {\n  target.dispatchEvent(new PointerEvent(\"pointer\" + type, {\n    isPrimary: true,\n    bubbles: true\n  }));\n}\n\nvar enableKeyboardPress = function enableKeyboardPress(focusEvent, eventOptions) {\n  var element = focusEvent.currentTarget;\n  if (!element) return;\n  var handleKeydown = filterEvents(function () {\n    if (isPressing.has(element)) return;\n    firePointerEvent(element, \"down\");\n    var handleKeyup = filterEvents(function () {\n      firePointerEvent(element, \"up\");\n    });\n\n    var handleBlur = function handleBlur() {\n      return firePointerEvent(element, \"cancel\");\n    };\n\n    element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n    element.addEventListener(\"blur\", handleBlur, eventOptions);\n  });\n  element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n  /**\n   * Add an event listener that fires on blur to remove the keydown events.\n   */\n\n  element.addEventListener(\"blur\", function () {\n    return element.removeEventListener(\"keydown\", handleKeydown);\n  }, eventOptions);\n};\n\nexport { enableKeyboardPress };","map":{"version":3,"names":["isPressing","filterEvents","callback","event","key","firePointerEvent","target","type","dispatchEvent","PointerEvent","isPrimary","bubbles","enableKeyboardPress","focusEvent","eventOptions","element","currentTarget","handleKeydown","has","handleKeyup","handleBlur","addEventListener","removeEventListener"],"sources":["/Users/karthikgurram/Public/portfolio/web-dev-projects/personal-portfolio/node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs"],"sourcesContent":["import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;EAC5B,OAAO,UAACC,KAAD,EAAW;IACd,IAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EACI;IACJF,QAAQ,CAACC,KAAD,CAAR;EACH,CAJD;AAKH;;AACD,SAASE,gBAAT,CAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;EACpCD,MAAM,CAACE,aAAP,CAAqB,IAAIC,YAAJ,CAAiB,YAAYF,IAA7B,EAAmC;IAAEG,SAAS,EAAE,IAAb;IAAmBC,OAAO,EAAE;EAA5B,CAAnC,CAArB;AACH;;AACD,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,UAAD,EAAaC,YAAb,EAA8B;EACtD,IAAMC,OAAO,GAAGF,UAAU,CAACG,aAA3B;EACA,IAAI,CAACD,OAAL,EACI;EACJ,IAAME,aAAa,GAAGhB,YAAY,CAAC,YAAM;IACrC,IAAID,UAAU,CAACkB,GAAX,CAAeH,OAAf,CAAJ,EACI;IACJV,gBAAgB,CAACU,OAAD,EAAU,MAAV,CAAhB;IACA,IAAMI,WAAW,GAAGlB,YAAY,CAAC,YAAM;MACnCI,gBAAgB,CAACU,OAAD,EAAU,IAAV,CAAhB;IACH,CAF+B,CAAhC;;IAGA,IAAMK,UAAU,GAAG,SAAbA,UAAa;MAAA,OAAMf,gBAAgB,CAACU,OAAD,EAAU,QAAV,CAAtB;IAAA,CAAnB;;IACAA,OAAO,CAACM,gBAAR,CAAyB,OAAzB,EAAkCF,WAAlC,EAA+CL,YAA/C;IACAC,OAAO,CAACM,gBAAR,CAAyB,MAAzB,EAAiCD,UAAjC,EAA6CN,YAA7C;EACH,CAViC,CAAlC;EAWAC,OAAO,CAACM,gBAAR,CAAyB,SAAzB,EAAoCJ,aAApC,EAAmDH,YAAnD;EACA;AACJ;AACA;;EACIC,OAAO,CAACM,gBAAR,CAAyB,MAAzB,EAAiC;IAAA,OAAMN,OAAO,CAACO,mBAAR,CAA4B,SAA5B,EAAuCL,aAAvC,CAAN;EAAA,CAAjC,EAA8FH,YAA9F;AACH,CApBD;;AAsBA,SAASF,mBAAT"},"metadata":{},"sourceType":"module"}